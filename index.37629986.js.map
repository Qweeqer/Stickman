{"mappings":"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","sources":["src/game.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport { stickmanUrl, trackFloorUrl, brainUrl } from './mesh/models.js';\n\nclass Character {\n  constructor() {\n    this.keysAllowed = {};\n\n    this.element = new THREE.Group();\n    this.mixer = null;\n    this.character = null;\n    this.characterURL = stickmanUrl;\n    this.isRunning = false;\n    this.runAction = null;\n    this.moveLeftDirection = false;\n    this.moveRightDirection = false;\n\n    // Привязываем обработчики событий к экземпляру класса\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  loadCharacter() {\n    return new Promise((resolve, reject) => {\n      const loader = new GLTFLoader();\n      loader.load(\n        this.characterURL,\n        gltf => {\n          this.character = gltf.scene;\n          this.mixer = new THREE.AnimationMixer(this.character);\n          if (\n            this.character.animations &&\n            this.character.animations.length > 0\n          ) {\n            this.playAnimation(this.character.animations, 'Run');\n            this.runAction = this.mixer.clipAction(\n              this.character.animations[4]\n            ); \n          }\n          resolve();\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n  playAnimation(animations, name) {\n    if (animations && animations.length > 0) {\n      const clip = THREE.AnimationClip.findByName(animations, name);\n      if (clip) {\n        const action = this.mixer.clipAction(clip);\n        action.play();\n      }\n    }\n  }\n\n  update() {\n    if (this.mixer) {\n      this.mixer.update(0.01);\n    }\n\n    if (this.isRunning) {\n      this.moveForward();\n    }\n\n    if (this.moveLeftDirection) {\n      this.moveLeft();\n    }\n\n    if (this.moveRightDirection) {\n      this.moveRight();\n    }\n  }\n\n  onUpKeyPressed() {\n    this.isRunning = true;\n    if (this.runAction) {\n      this.mixer.stopAllAction();\n      this.runAction.reset();\n      this.runAction.play();\n    }\n  }\n\n  onLeftKeyPressed() {\n    this.moveLeftDirection = true;\n    this.moveRightDirection = false;\n  }\n\n  onRightKeyPressed() {\n    this.moveLeftDirection = false;\n    this.moveRightDirection = true;\n  }\n\n  moveForward() {\n    this.element.position.z -= 3;\n    this.onUpKeyPressed();\n  }\n\n  moveLeft() {\n    if (this.element.position.x > -3) {\n      this.element.position.x -= 1;\n    }\n  }\n\n  moveRight() {\n    if (this.element.position.x < 3) {\n      this.element.position.x += 1;\n    }\n  }\n\n  onUnpause() {}\n\n  onPause() {}\n\n  handleKeyDown(e) {\n    if (!this.gameOver) {\n      const key = e.keyCode;\n      if (this.keysAllowed[key] === false) return;\n      this.keysAllowed[key] = false;\n      if (this.paused && !this.collisionsDetected() && key > 18) {\n        this.paused = false;\n        this.character.onUnpause();\n        document.getElementById('variable-content').style.visibility = 'hidden';\n        document.getElementById('controls').style.display = 'none';\n      } else {\n        if (key === 80) {\n          this.paused = true;\n          this.onPause();\n          document.getElementById('variable-content').style.visibility =\n            'visible';\n          document.getElementById('variable-content').innerHTML =\n            'Game is paused. Press any key to resume.';\n        }\n        if (key === 38 && !this.paused) {\n          this.onUpKeyPressed();\n          console.log('Up key pressed');\n        }\n        if (key === 37 && !this.paused) {\n          this.moveLeftDirection = true;\n          this.moveRightDirection = false;\n          console.log('Left key pressed');\n        }\n        if (key === 39 && !this.paused) {\n          this.moveLeftDirection = false;\n          this.moveRightDirection = true;\n          console.log('Right key pressed');\n        }\n      }\n    }\n  }\n\n  handleKeyUp(e) {\n    const key = e.keyCode;\n    if (key === 37 && !this.paused) {\n      this.moveLeftDirection = false;\n      this.moveRightDirection = false;\n      console.log('Left key released');\n    }\n    if (key === 39 && !this.paused) {\n      this.moveRightDirection = false;\n      this.moveLeftDirection = false;\n      console.log('Right key released');\n    }\n    this.keysAllowed[key] = true;\n  }\n}\n\nclass World {\n  constructor() {\n    this.element = document.getElementById('world');\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      60,\n      this.element.clientWidth / this.element.clientHeight,\n      1,\n      120000\n    );\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n    });\n    this.light = new THREE.HemisphereLight(0xffffff, 0xffffff, 1);\n    this.trackFloor = null;\n    this.brain = null;\n    this.paused = true;\n    this.keysAllowed = {};\n    this.gameOver = false;\n    this.score = 0;\n    this.difficulty = 0;\n    this.fogDistance = 40000;\n    this.character = null;\n    this.mixer = null;\n\n    this.init();\n  }\n\n  async init() {\n    this.renderer.setSize(this.element.clientWidth, this.element.clientHeight);\n    this.renderer.shadowMap.enabled = true;\n    this.element.appendChild(this.renderer.domElement);\n    this.scene.fog = new THREE.Fog(0xbadbe4, 1, this.fogDistance);\n    this.scene.background = new THREE.Color(0xa0a0a0);\n    this.camera.position.set(0, 1500, -2000);\n    this.camera.lookAt(new THREE.Vector3(0, 600, -5000));\n\n    window.addEventListener(\n      'resize',\n      this.handleWindowResize.bind(this),\n      false\n    );\n\n    this.scene.add(this.light);\n\n    this.character = new Character();\n    await this.character.loadCharacter(); // Дождитесь загрузки модели и анимаций\n    if (\n      this.character.character.animations &&\n      this.character.character.animations.length > 0\n    ) {\n      this.character.playAnimation(this.character.character.animations, 'Run'); // Воспроизведите анимацию бега\n      this.character.runAction = this.character.mixer.clipAction(\n        this.character.character.animations[4]\n      ); // Установите анимацию бега для runAction\n    }\n    this.character.character.scale.set(100, 100, 100);\n    this.scene.add(this.character.element);\n\n    this.trackFloor = await this.createModel(trackFloorUrl);\n    this.trackFloor.position.set(0, 0, 0);\n    this.scene.add(this.trackFloor);\n\n    this.brain = await this.createModel(brainUrl);\n    this.brain.position.set(0, 0, 0);\n    this.scene.add(this.brain);\n\n    this.keysAllowed = {};\n\n    this.score = 0;\n    this.difficulty = 0;\n    document.getElementById('score').innerHTML = this.score;\n\n    this.initEventListeners();\n\n    this.loop();\n  }\n\n  loop() {\n    if (!this.paused) {\n      if (this.trackFloor.position.z % 3000 === 0) {\n        this.difficulty += 1;\n        const levelLength = 30;\n        if (this.difficulty % levelLength === 0) {\n          const level = this.difficulty / levelLength;\n          switch (level) {\n            case 1:\n              break;\n            // Добавьте дополнительные варианты для других уровней\n          }\n        }\n        this.createRowOfModels(-120000);\n        this.scene.fog.far = this.fogDistance;\n      }\n\n      this.updateModelPositions();\n      this.character.update();\n\n      if (this.collisionsDetected()) {\n        this.gameOver = true;\n        this.paused = true;\n        document.addEventListener('keydown', e => {\n          if (e.keyCode === 40) document.location.reload(true);\n        });\n        const variableContent = document.getElementById('variable-content');\n        variableContent.style.visibility = 'visible';\n        variableContent.innerHTML =\n          'Game over! Press the down arrow to try again.';\n      }\n    }\n\n    this.renderer.render(this.scene, this.camera);\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  handleWindowResize() {\n    this.camera.aspect = this.element.clientWidth / this.element.clientHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(this.element.clientWidth, this.element.clientHeight);\n  }\n\n  async createModel(url) {\n    const loader = new GLTFLoader();\n    return new Promise((resolve, reject) => {\n      loader.load(\n        url,\n        gltf => {\n          const model = gltf.scene;\n          this.scene.add(model);\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n  createRowOfModels(z) {\n    let pos = -1800;\n    while (pos < 1800) {\n      this.createModel(brainUrl).then(model => {\n        model.position.set(pos, 10, z);\n        this.scene.add(model);\n      });\n      pos += Math.random() * 800 + 800;\n    }\n  }\n\n  updateModelPositions() {\n    this.scene.traverse(object => {\n      if (\n        object instanceof THREE.Mesh &&\n        object !== this.trackFloor &&\n        object !== this.brain &&\n        object !== this.character.element\n      ) {\n        object.position.z += 100;\n      }\n    });\n  }\n\n  collisionsDetected() {\n    if (!this.character || !this.character.element) {\n      return false;\n    }\n\n    const charPos = this.character.element.position.clone();\n    const charBox = new THREE.Box3().setFromObject(this.character.element);\n\n    let collisionDetected = false;\n\n    this.scene.traverse(object => {\n      if (\n        object instanceof THREE.Mesh &&\n        object !== this.character.element &&\n        object !== this.trackFloor &&\n        object !== this.brain\n      ) {\n        const objPos = object.position.clone();\n        const objBox = new THREE.Box3().setFromObject(object);\n        if (charBox.intersectsBox(objBox)) {\n          collisionDetected = true;\n          return;\n        }\n      }\n    });\n\n    return collisionDetected;\n  }\n\n  initEventListeners() {\n    document.addEventListener('keydown', this.character.handleKeyDown);\n    document.addEventListener('keyup', this.character.handleKeyUp);\n    window.addEventListener('focus', this.handleFocus);\n  }\n\n  handleFocus = e => {\n    this.keysAllowed = {};\n  };\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const world = new World();\n});\n"],"names":["$bpxeT","parcelRequire","$99d08c4d6b37c7ca$var$Character","Character","this","keysAllowed","element","$6OvZu","Group","mixer","character","characterURL","$fU8Qh","stickmanUrl","isRunning","runAction","moveLeftDirection","moveRightDirection","handleKeyDown","bind","handleKeyUp","key","Promise","resolve","reject","$53OwP","GLTFLoader","load","_this","gltf","_this1","scene","AnimationMixer","animations","length","playAnimation","clipAction","undefined","name","clip","AnimationClip","findByName","play","update","moveForward","moveLeft","moveRight","stopAllAction","reset","position","z","onUpKeyPressed","x","e","gameOver","keyCode","paused","collisionsDetected","onUnpause","document","getElementById","style","visibility","display","onPause","innerHTML","console","log","$99d08c4d6b37c7ca$var$World","World","$parcel$interopDefault","$hKHmD","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","alpha","antialias","light","HemisphereLight","trackFloor","brain","score","difficulty","fogDistance","init","$2TvXO","mark","_callee","setSize","shadowMap","enabled","appendChild","domElement","fog","Fog","background","Color","set","lookAt","Vector3","window","addEventListener","handleWindowResize","add","loadCharacter","scale","createModel","trackFloorUrl","_ctx","sent","brainUrl","initEventListeners","loop","createRowOfModels","far","updateModelPositions","location","reload","variableContent","render","requestAnimationFrame","aspect","updateProjectionMatrix","url","loader","model","pos","then","Math","random","traverse","object","Mesh","clone","charBox","Box3","setFromObject","collisionDetected","objBox","intersectsBox","handleFocus"],"version":3,"file":"index.37629986.js.map"}