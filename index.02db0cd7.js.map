{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAKA,MAAMC,EACJC,cACEC,KAAKC,YAAc,GAEnBD,KAAKE,QAAU,IAAIN,EAAAO,MACnBH,KAAKI,MAAQ,KACbJ,KAAKK,UAAY,KACjBL,KAAKM,aAAeC,EAAAC,YACpBR,KAAKS,WAAY,EACjBT,KAAKU,UAAY,KACjBV,KAAKW,mBAAoB,EACzBX,KAAKY,oBAAqB,EAGoBZ,KAAzCa,cAAgBb,KAAKa,cAAcC,KAAKd,MAC7CA,KAAKe,YAAcf,KAAKe,YAAYD,KAAKd,K,CAG3CgB,gBACE,OAAO,IAAIC,SAAQ,CAACC,EAASC,MACZ,IAAI,EAAAC,EAAAC,aACZC,KACLtB,KAAKM,cACLiB,IACEvB,KAAKK,UAAYkB,EAAKC,MACtBxB,KAAKI,MAAQ,IAAIR,EAAA6B,eAAqBzB,KAAKK,WAEzCL,KAAKK,UAAUqB,YACf1B,KAAKK,UAAUqB,WAAWC,OAAS,IAEnC3B,KAAK4B,cAAc5B,KAAKK,UAAUqB,WAAY,OAC9C1B,KAAKU,UAAYV,KAAKI,MAAMyB,WAC1B7B,KAAKK,UAAUqB,WAAW,KAG9BR,GAAS,QAEXY,EACAX,EACD,G,CAILS,cAAcF,EAAYK,GACxB,GAAIL,GAAcA,EAAWC,OAAS,EAAG,CACvC,MAAMK,EAAOpC,EAAAqC,cAAoBC,WAAWR,EAAYK,GACxD,GAAIC,EAAM,CACOhC,KAAKI,MAAMyB,WAAWG,GAC9BG,M,GAKbC,SACMpC,KAAKI,OACPJ,KAAKI,MAAMgC,OAAO,KAGhBpC,KAAKS,WACPT,KAAKqC,cAGHrC,KAAKW,mBACPX,KAAKsC,WAGHtC,KAAKY,oBACPZ,KAAKuC,W,CAITC,aAAaC,GACXC,QAAQC,IAAI,GAAGF,gCACG,OAAdA,GACFzC,KAAKS,WAAY,EACbT,KAAKI,OAASJ,KAAKK,UAAUqB,WAAW,KAC1C1B,KAAKI,MAAMwC,gBACX5C,KAAKU,UAAYV,KAAKI,MAAMyB,WAAW7B,KAAKK,UAAUqB,WAAW,IACjE1B,KAAKU,UAAUyB,SAEM,SAAdM,GACTzC,KAAKW,mBAAoB,EACzBX,KAAKY,oBAAqB,GACH,UAAd6B,IACTzC,KAAKW,mBAAoB,EACzBX,KAAKY,oBAAqB,E,CAI9ByB,cACErC,KAAKE,QAAQ2C,SAASC,GAAK,EAC3B9C,KAAK+C,gB,CAGPT,WAEEI,QAAQC,IAAI,oBACZ3C,KAAKE,QAAQ2C,SAASG,GAAK,C,CAI7BT,YAEEG,QAAQC,IAAI,qBACZ3C,KAAKE,QAAQ2C,SAASG,GAAK,C,CAI7BnC,cAAcoC,GACZ,MAAMC,EAAMD,EAAEE,QACTnD,KAAKoD,WAAsC,IAA1BpD,KAAKC,YAAYiD,KACrClD,KAAKC,YAAYiD,IAAO,EACnBlD,KAAKqD,SACI,KAARH,GACFlD,KAAKwC,aAAa,MAClBE,QAAQC,IAAI,mBACK,KAARO,GACTlD,KAAKwC,aAAa,QAClBE,QAAQC,IAAI,+BAAgC3C,KAAKE,QAAQ2C,SAASG,GAClEN,QAAQC,IAAI,qBACK,KAARO,IACTlD,KAAKwC,aAAa,SAClBE,QAAQC,IAAI,gCAAiC3C,KAAKE,QAAQ2C,SAASG,GACnEN,QAAQC,IAAI,uB,CAMpB5B,YAAYkC,GACV,MAAMC,EAAMD,EAAEE,QACF,KAARD,IAEsBlD,KAAnBW,mBAAoB,EACzB+B,QAAQC,IAAI,sBAEF,KAARO,IAEuBlD,KAApBY,oBAAqB,EAC1B8B,QAAQC,IAAI,uBAEd3C,KAAKC,YAAYiD,IAAO,C,EAI5B,MAAMI,EACJvD,cACEC,KAAKE,QAAUqD,SAASC,eAAe,SACvCxD,KAAKwB,MAAQ,IAAI5B,EAAA6D,MACjBzD,KAAK0D,OAAS,IAAI9D,EAAA+D,kBAChB,GACA3D,KAAKE,QAAQ0D,YAAc5D,KAAKE,QAAQ2D,aACxC,EACA,MAEF7D,KAAK8D,SAAW,IAAIlE,EAAAmE,cAAoB,CACtCC,OAAO,EACPC,WAAW,IAEbjE,KAAKkE,MAAQ,IAAItE,EAAAuE,gBAAsB,SAAU,SAAU,GAC3DnE,KAAKoE,WAAa,KAClBpE,KAAKqE,MAAQ,KACbrE,KAAKqD,QAAS,EACdrD,KAAKC,YAAc,GACnBD,KAAKoD,UAAW,EAChBpD,KAAKsE,MAAQ,EACbtE,KAAKuE,WAAa,EAClBvE,KAAKwE,YAAc,IACnBxE,KAAKK,UAAY,KACjBL,KAAKI,MAAQ,KAEbJ,KAAKyE,M,CAGPC,aACE1E,KAAK8D,SAASa,QAAQ3E,KAAKE,QAAQ0D,YAAa5D,KAAKE,QAAQ2D,cAC7D7D,KAAK8D,SAASc,UAAUC,SAAU,EAClC7E,KAAKE,QAAQ4E,YAAY9E,KAAK8D,SAASiB,YACvC/E,KAAKwB,MAAMwD,IAAM,IAAIpF,EAAAqF,IAAU,SAAU,EAAGjF,KAAKwE,aACjDxE,KAAKwB,MAAM0D,WAAa,IAAItF,EAAAuF,MAAY,UACxCnF,KAAK0D,OAAOb,SAASuC,IAAI,EAAG,MAAM,KAClCpF,KAAK0D,OAAO2B,OAAO,IAAIzF,EAAA0F,QAAc,EAAG,KAAK,MAE7CC,OAAOC,iBACL,SACAxF,KAAKyF,mBAAmB3E,KAAKd,OAC7B,GAGFA,KAAKwB,MAAMkE,IAAI1F,KAAKkE,OAEpBlE,KAAKK,UAAY,IAAIP,QACfE,KAAKK,UAAUW,gBAEnBhB,KAAKK,UAAUA,UAAUqB,YACzB1B,KAAKK,UAAUA,UAAUqB,WAAWC,OAAS,IAE7C3B,KAAKK,UAAUuB,cAAc5B,KAAKK,UAAUA,UAAUqB,WAAY,OACxC1B,KAArBK,UAAUK,UAAYV,KAAKK,UAAUD,MAAMyB,WAC9C7B,KAAKK,UAAUA,UAAUqB,WAAW,KAGxC1B,KAAKK,UAAUA,UAAUsF,MAAMP,IAAI,IAAK,IAAK,KAC7CpF,KAAKwB,MAAMkE,IAAI1F,KAAKK,UAAUH,SAE9BF,KAAKoE,iBAAmBpE,KAAK4F,YAAYrF,EAAAsF,eACzC7F,KAAKoE,WAAWvB,SAASuC,IAAI,EAAG,EAAG,GACnCpF,KAAKwB,MAAMkE,IAAI1F,KAAKoE,YAEpBpE,KAAKqE,YAAcrE,KAAK4F,YAAYrF,EAAAuF,UACpC9F,KAAKqE,MAAMxB,SAASuC,IAAI,EAAG,EAAG,GAC9BpF,KAAKwB,MAAMkE,IAAI1F,KAAKqE,OAEpBrE,KAAKC,YAAc,GAEnBD,KAAKsE,MAAQ,EACbtE,KAAKuE,WAAa,EAClBhB,SAASC,eAAe,SAASuC,UAAY/F,KAAKsE,MAElDtE,KAAKgG,qBAELhG,KAAKiG,M,CAGPA,OACE,IAAKjG,KAAKqD,OAAQ,CAChB,GAAIrD,KAAKoE,WAAWvB,SAASC,EAAI,KAAS,EAAG,CAC3C9C,KAAKuE,YAAc,EACnB,MAAM2B,EAAc,GACpB,GAAIlG,KAAKuE,WAAa2B,GAAgB,EAAG,CACzBlG,KAAKuE,U,CAOrBvE,KAAKmG,mBAAkB,MACvBnG,KAAKwB,MAAMwD,IAAIoB,IAAMpG,KAAKwE,W,CAM5B,GAHAxE,KAAKqG,uBACLrG,KAAKK,UAAU+B,SAEXpC,KAAKsG,qBAAsB,CAC7BtG,KAAKoD,UAAW,EAChBpD,KAAKqD,QAAS,EACdE,SAASiC,iBAAiB,WAAWvC,IACjB,KAAdA,EAAEE,SAAgBI,SAASgD,SAASC,QAAO,EAAK,IAEtD,MAAMC,EAAkBlD,SAASC,eAAe,oBAChDiD,EAAgBC,MAAMC,WAAa,UACnCF,EAAgBV,UACd,+C,EAIN/F,KAAK8D,SAAS8C,OAAO5G,KAAKwB,MAAOxB,KAAK0D,QACtCmD,sBAAsB7G,KAAKiG,KAAKnF,KAAKd,M,CAGvCyF,qBACEzF,KAAK0D,OAAOoD,OAAS9G,KAAKE,QAAQ0D,YAAc5D,KAAKE,QAAQ2D,aAC7D7D,KAAK0D,OAAOqD,yBACZ/G,KAAK8D,SAASa,QAAQ3E,KAAKE,QAAQ0D,YAAa5D,KAAKE,QAAQ2D,a,CAG/Da,kBAAkBsC,GAChB,MAAMC,EAAS,IAAI,EAAA7F,EAAAC,YACnB,OAAO,IAAIJ,SAAQ,CAACC,EAASC,KAC3B8F,EAAO3F,KACL0F,GACAzF,IACE,MAAM2F,EAAQ3F,EAAKC,MACnBxB,KAAKwB,MAAMkE,IAAIwB,GACfhG,EAAQgG,EAAM,QAEhBpF,EACAX,EACD,G,CAILgF,kBAAkBrD,GAChB,IAAIqE,GAAM,KACV,KAAOA,EAAM,MACXnH,KAAK4F,YAAYrF,EAAAuF,UAAUsB,MAAKF,IAC9BA,EAAMrE,SAASuC,IAAI+B,EAAK,GAAIrE,GAC5B9C,KAAKwB,MAAMkE,IAAIwB,EAAM,IAEvBC,GAAuB,IAAhBE,KAAKC,SAAiB,G,CAIjCjB,uBACErG,KAAKwB,MAAM+F,UAASC,IAEhBA,aAAkB5H,EAAA6H,MAClBD,IAAWxH,KAAKoE,YAChBoD,IAAWxH,KAAKqE,OAChBmD,IAAWxH,KAAKK,UAAUH,UAE1BsH,EAAO3E,SAASC,GAAK,IAAG,G,CAK9BwD,qBACE,IAAKtG,KAAKK,YAAcL,KAAKK,UAAUH,QACrC,OAAO,EAGOF,KAAKK,UAAUH,QAAQ2C,SAAS6E,QAAhD,MACMC,GAAU,IAAI/H,EAAAgI,MAAaC,cAAc7H,KAAKK,UAAUH,SAE9D,IAAI4H,GAAoB,EAkBxB,OAhBA9H,KAAKwB,MAAM+F,UAASC,IAClB,GACEA,aAAkB5H,EAAA6H,MAClBD,IAAWxH,KAAKK,UAAUH,SAC1BsH,IAAWxH,KAAKoE,YAChBoD,IAAWxH,KAAKqE,MAChB,CACemD,EAAO3E,SAAS6E,QAA/B,MACMK,GAAS,IAAInI,EAAAgI,MAAaC,cAAcL,GAC9C,GAAIG,EAAQK,cAAcD,GAExB,YADAD,GAAoB,E,KAMnBA,C,CAGT9B,qBACEzC,SAASiC,iBACP,UACAxF,KAAKK,UAAUQ,cAAcC,KAAKd,KAAKK,YAEzCkD,SAASiC,iBACP,QACAxF,KAAKK,UAAUU,YAAYD,KAAKd,KAAKK,YAEvCkF,OAAOC,iBAAiB,QAASxF,KAAKiI,Y,CAGxCA,YAAchF,IACZjD,KAAKC,YAAc,EAAE,EAIzBsF,OAAOC,iBAAiB,oBAAoB,KAC5B,IAAIlC,CAAO","sources":["src/game.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport { stickmanUrl, trackFloorUrl, brainUrl } from './mesh/models.js';\n\nclass Character {\n  constructor() {\n    this.keysAllowed = {};\n\n    this.element = new THREE.Group();\n    this.mixer = null;\n    this.character = null;\n    this.characterURL = stickmanUrl;\n    this.isRunning = false;\n    this.runAction = null;\n    this.moveLeftDirection = false;\n    this.moveRightDirection = false;\n\n    // Привязываем обработчики событий к экземпляру класса\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  loadCharacter() {\n    return new Promise((resolve, reject) => {\n      const loader = new GLTFLoader();\n      loader.load(\n        this.characterURL,\n        gltf => {\n          this.character = gltf.scene;\n          this.mixer = new THREE.AnimationMixer(this.character);\n          if (\n            this.character.animations &&\n            this.character.animations.length > 0\n          ) {\n            this.playAnimation(this.character.animations, 'Run');\n            this.runAction = this.mixer.clipAction(\n              this.character.animations[4]\n            );\n          }\n          resolve();\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n  playAnimation(animations, name) {\n    if (animations && animations.length > 0) {\n      const clip = THREE.AnimationClip.findByName(animations, name);\n      if (clip) {\n        const action = this.mixer.clipAction(clip);\n        action.play();\n      }\n    }\n  }\n\n  update() {\n    if (this.mixer) {\n      this.mixer.update(0.01);\n    }\n\n    if (this.isRunning) {\n      this.moveForward();\n    }\n\n    if (this.moveLeftDirection) {\n      this.moveLeft();\n    }\n\n    if (this.moveRightDirection) {\n      this.moveRight();\n    }\n  }\n\n  onKeyPressed(direction) {\n    console.log(`${direction} key pressed handler called`);\n    if (direction === 'up') {\n      this.isRunning = true;\n      if (this.mixer && this.character.animations[4]) {\n        this.mixer.stopAllAction();\n        this.runAction = this.mixer.clipAction(this.character.animations[4]);\n        this.runAction.play();\n      }\n    } else if (direction === 'left') {\n      this.moveLeftDirection = true;\n      this.moveRightDirection = false;\n    } else if (direction === 'right') {\n      this.moveLeftDirection = false;\n      this.moveRightDirection = true;\n    }\n  }\n\n  moveForward() {\n    this.element.position.z -= 3;\n    this.onUpKeyPressed();\n  }\n\n  moveLeft() {\n    // if (this.element.position.x > -3) {\n    console.log('Move left called');\n    this.element.position.x -= 1;\n    // }\n  }\n\n  moveRight() {\n    // if (this.element.position.x < 3) {\n    console.log('Move right called');\n    this.element.position.x += 1;\n    // }\n  }\n\n  handleKeyDown(e) {\n    const key = e.keyCode;\n    if (!this.gameOver && this.keysAllowed[key] !== false) {\n      this.keysAllowed[key] = false;\n      if (!this.paused) {\n        if (key === 38) {\n          this.onKeyPressed('up');\n          console.log('Up key pressed');\n        } else if (key === 37) {\n          this.onKeyPressed('left');\n          console.log('Position X after move left: ', this.element.position.x);\n          console.log('Left key pressed');\n        } else if (key === 39) {\n          this.onKeyPressed('right');\n          console.log('Position X after move right: ', this.element.position.x);\n          console.log('Right key pressed');\n        }\n      }\n    }\n  }\n\n  handleKeyUp(e) {\n    const key = e.keyCode;\n    if (key === 37) {\n      // если отпущена клавиша влево\n      this.moveLeftDirection = false;\n      console.log('Left key released');\n    }\n    if (key === 39) {\n      // если отпущена клавиша вправо\n      this.moveRightDirection = false;\n      console.log('Right key released');\n    }\n    this.keysAllowed[key] = true;\n  }\n}\n\nclass World {\n  constructor() {\n    this.element = document.getElementById('world');\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      60,\n      this.element.clientWidth / this.element.clientHeight,\n      1,\n      120000\n    );\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: true,\n    });\n    this.light = new THREE.HemisphereLight(0xffffff, 0xffffff, 1);\n    this.trackFloor = null;\n    this.brain = null;\n    this.paused = true;\n    this.keysAllowed = {};\n    this.gameOver = false;\n    this.score = 0;\n    this.difficulty = 0;\n    this.fogDistance = 40000;\n    this.character = null;\n    this.mixer = null;\n\n    this.init();\n  }\n\n  async init() {\n    this.renderer.setSize(this.element.clientWidth, this.element.clientHeight);\n    this.renderer.shadowMap.enabled = true;\n    this.element.appendChild(this.renderer.domElement);\n    this.scene.fog = new THREE.Fog(0xbadbe4, 1, this.fogDistance);\n    this.scene.background = new THREE.Color(0xa0a0a0);\n    this.camera.position.set(0, 1500, -2000);\n    this.camera.lookAt(new THREE.Vector3(0, 600, -5000));\n\n    window.addEventListener(\n      'resize',\n      this.handleWindowResize.bind(this),\n      false\n    );\n\n    this.scene.add(this.light);\n\n    this.character = new Character();\n    await this.character.loadCharacter(); // Дождитесь загрузки модели и анимаций\n    if (\n      this.character.character.animations &&\n      this.character.character.animations.length > 0\n    ) {\n      this.character.playAnimation(this.character.character.animations, 'Run'); // Воспроизведите анимацию бега\n      this.character.runAction = this.character.mixer.clipAction(\n        this.character.character.animations[4]\n      ); // Установите анимацию бега для runAction\n    }\n    this.character.character.scale.set(100, 100, 100);\n    this.scene.add(this.character.element);\n\n    this.trackFloor = await this.createModel(trackFloorUrl);\n    this.trackFloor.position.set(0, 0, 0);\n    this.scene.add(this.trackFloor);\n\n    this.brain = await this.createModel(brainUrl);\n    this.brain.position.set(0, 0, 0);\n    this.scene.add(this.brain);\n\n    this.keysAllowed = {};\n\n    this.score = 0;\n    this.difficulty = 0;\n    document.getElementById('score').innerHTML = this.score;\n\n    this.initEventListeners();\n\n    this.loop();\n  }\n\n  loop() {\n    if (!this.paused) {\n      if (this.trackFloor.position.z % 3000 === 0) {\n        this.difficulty += 1;\n        const levelLength = 30;\n        if (this.difficulty % levelLength === 0) {\n          const level = this.difficulty / levelLength;\n          switch (level) {\n            case 1:\n              break;\n            // Добавьте дополнительные варианты для других уровней\n          }\n        }\n        this.createRowOfModels(-120000);\n        this.scene.fog.far = this.fogDistance;\n      }\n\n      this.updateModelPositions();\n      this.character.update();\n\n      if (this.collisionsDetected()) {\n        this.gameOver = true;\n        this.paused = true;\n        document.addEventListener('keydown', e => {\n          if (e.keyCode === 40) document.location.reload(true);\n        });\n        const variableContent = document.getElementById('variable-content');\n        variableContent.style.visibility = 'visible';\n        variableContent.innerHTML =\n          'Game over! Press the down arrow to try again.';\n      }\n    }\n\n    this.renderer.render(this.scene, this.camera);\n    requestAnimationFrame(this.loop.bind(this));\n  }\n\n  handleWindowResize() {\n    this.camera.aspect = this.element.clientWidth / this.element.clientHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(this.element.clientWidth, this.element.clientHeight);\n  }\n\n  async createModel(url) {\n    const loader = new GLTFLoader();\n    return new Promise((resolve, reject) => {\n      loader.load(\n        url,\n        gltf => {\n          const model = gltf.scene;\n          this.scene.add(model);\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n  createRowOfModels(z) {\n    let pos = -1800;\n    while (pos < 1800) {\n      this.createModel(brainUrl).then(model => {\n        model.position.set(pos, 10, z);\n        this.scene.add(model);\n      });\n      pos += Math.random() * 800 + 800;\n    }\n  }\n\n  updateModelPositions() {\n    this.scene.traverse(object => {\n      if (\n        object instanceof THREE.Mesh &&\n        object !== this.trackFloor &&\n        object !== this.brain &&\n        object !== this.character.element\n      ) {\n        object.position.z += 100;\n      }\n    });\n  }\n\n  collisionsDetected() {\n    if (!this.character || !this.character.element) {\n      return false;\n    }\n\n    const charPos = this.character.element.position.clone();\n    const charBox = new THREE.Box3().setFromObject(this.character.element);\n\n    let collisionDetected = false;\n\n    this.scene.traverse(object => {\n      if (\n        object instanceof THREE.Mesh &&\n        object !== this.character.element &&\n        object !== this.trackFloor &&\n        object !== this.brain\n      ) {\n        const objPos = object.position.clone();\n        const objBox = new THREE.Box3().setFromObject(object);\n        if (charBox.intersectsBox(objBox)) {\n          collisionDetected = true;\n          return;\n        }\n      }\n    });\n\n    return collisionDetected;\n  }\n\n  initEventListeners() {\n    document.addEventListener(\n      'keydown',\n      this.character.handleKeyDown.bind(this.character)\n    );\n    document.addEventListener(\n      'keyup',\n      this.character.handleKeyUp.bind(this.character)\n    );\n    window.addEventListener('focus', this.handleFocus);\n  }\n\n  handleFocus = e => {\n    this.keysAllowed = {};\n  };\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  const world = new World();\n});\n"],"names":["$eq1Fs","parcelRequire","$91c667a13b4c74a9$var$Character","constructor","this","keysAllowed","element","Group","mixer","character","characterURL","$l5XAj","stickmanUrl","isRunning","runAction","moveLeftDirection","moveRightDirection","handleKeyDown","bind","handleKeyUp","loadCharacter","Promise","resolve","reject","$kXZ5p","GLTFLoader","load","gltf","scene","AnimationMixer","animations","length","playAnimation","clipAction","undefined","name","clip","AnimationClip","findByName","play","update","moveForward","moveLeft","moveRight","onKeyPressed","direction","console","log","stopAllAction","position","z","onUpKeyPressed","x","e","key","keyCode","gameOver","paused","$91c667a13b4c74a9$var$World","document","getElementById","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","renderer","WebGLRenderer","alpha","antialias","light","HemisphereLight","trackFloor","brain","score","difficulty","fogDistance","init","async","setSize","shadowMap","enabled","appendChild","domElement","fog","Fog","background","Color","set","lookAt","Vector3","window","addEventListener","handleWindowResize","add","scale","createModel","trackFloorUrl","brainUrl","innerHTML","initEventListeners","loop","levelLength","createRowOfModels","far","updateModelPositions","collisionsDetected","location","reload","variableContent","style","visibility","render","requestAnimationFrame","aspect","updateProjectionMatrix","url","loader","model","pos","then","Math","random","traverse","object","Mesh","clone","charBox","Box3","setFromObject","collisionDetected","objBox","intersectsBox","handleFocus"],"version":3,"file":"index.02db0cd7.js.map"}